#!/bin/bash
# COLOR VALIDATION
clear
y='\033[1;33m' #yellow
BGX="\033[42m"
CYAN="\033[96m"
z="\033[95;1m"
f="\033[1;97;41m"
G="\033[92m"
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
BLUE="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
purple="\033[1;95m"
YELL='\033[0;33m'

# underline
UPU='\033[5;35m'
UCY='\033[5;36m'
UWH='\033[5;37m'
#INTALLER-UDP
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
IPVPS=$(curl -s ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d-%m-%Y')
TIMEZONE=$(printf '%(%H-%M-%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
clear
MYIP=$(curl -sS ipv4.icanhazip.com)
echo ""
izinsc="https://raw.githubusercontent.com/asheeka/SSHVPS/main/Register"
# USERNAME
rm -f /usr/bin/user
username=$(curl ${izinsc} | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
# validity
rm -f /usr/bin/e
valid=$(curl ${izinsc} | grep $MYIP | awk '{print $3}')
echo "$valid" >/usr/bin/e
# DETAIL ORDER
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
clear
# CERTIFICATE STATUS
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certifacate=$(((d1 - d2) / 86400))
# VPS Information
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "$COLOR1 $NC Expiry In   : $(( (d1 - d2) / 86400 )) Days"
}
mai="datediff "$Exp" "$DATE""

# Status Expired Or Active
Info="(${green}Active${NC})"
Error="(${RED}Expired${NC})"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl ${izinsc} | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Error}"
fi
clear

# OS Uptime
uptime="$(uptime -p | cut -d " " -f 2-10)"

# Getting CPU Information
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"
ISP=$(curl -s ipinfo.io/org | cut -d " " -f 2-10 )
CITY=$(curl -s ipinfo.io/city )
WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
# IPVPS=$(curl -s ipinfo.io/ip )
IPVPS=$(curl -sS ipv4.icanhazip.com) 
cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )
clear
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
#Status
clear
# STATUS SERVICE  SSH 
if [[ $ssh_service == "running" ]]; then 
   status_ssh="ON"
else
   status_ssh="🔴"
fi

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="ON"
else
    status_ws_epro="🔴"
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="ON"
else
   status_haproxy="🔴"
fi

# STATUS SERVICE XRAY
if [[ $xray_service == "running" ]]; then 
   status_xray="ON"
else
   status_xray="🔴"
fi

# STATUS SERVICE NGINX
if [[ $nginx_service == "running" ]]; then 
   status_nginx="ON"
else
   status_nginx="🔴"
fi

# STATUS SERVICE Dropbear
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="ON"
else
   status_dropbear="🔴"
fi
# //
# // Log account
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=$vlx/2
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=$vmc/2
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
ssx=$(grep -c -E "^#ss# " "/etc/xray/config.json")
let ssa=$ssx/2
# //
r="\033[1;31m"  # merah
a="ACCOUNT" 
BWC='\033[1;36'
cyan='\033[96m'
bwhite='\033[1;37m'
clear
echo -e " "                                                           
echo -e " ${NC} ╭════════════════════════════════════════════════════╮"
echo -e " ${NC} │${bwhite}\033[41m                SSH VPS SCRIPT PREMIUM              ${NC}│"        
echo -e " ${NC} ╰════════════════════════════════════════════════════╯"
echo -e " ${NC} ╭════════════════════════════════════════════════════╮"
echo -e " ${NC} │$BLUE ● ${NC}SYSTEM OS ${YELL}   = ${NC}$MODEL${NC}"
echo -e " ${NC} │$BLUE ● ${NC}SERVER RAM ${YELL}  = ${NC}$tram / $uram MB $NC"
echo -e " ${NC} │$BLUE ● ${NC}DATE/TIME ${YELL}   = ${NC}$DATEVPS / $TIMEZONE${NC}"
echo -e " ${NC} │$BLUE ● ${NC}UPTIME ${YELL}      = ${NC}$SERONLINE${NC}"
echo -e " ${NC} │$BLUE ● ${NC}ISP ${YELL}         = ${green}$ISP${NC}"
echo -e " ${NC} │$BLUE ● ${NC}IP VPS ${YELL}      = ${green}$IPVPS${NC}"
echo -e " ${NC} │$BLUE ● ${NC}DOMAIN ${YELL}      = ${green}$domain${NC}"
echo -e " ${NC} ╰════════════════════════════════════════════════════╯$NC"
echo -e " ${NC}              >>> INFORMATION ACCOUNT <<<"
echo -e " ${NC}   ══════════════════════════════════════════════════${NC}" | lolcat
echo -e "             SSH/OPENVPN/UDP  $YELL=$NC $ssh1  ${YELL}$a${NC}"
echo -e "             VMESS/WS/GRPC    $YELL=$NC $vma  ${YELL}$a${NC}"
echo -e "             VLESS/WS/GRPC    $YELL=$NC $vla  ${YELL}$a${NC}"
echo -e "             TROJAN/WS/GRPC   $YELL=$NC $trb  ${YELL}$a${NC}"
echo -e "             SHADOW/WS/GRPC   $YELL=$NC $ssa  ${YELL}$a${NC}"
echo -e " ${NC}   ══════════════════════════════════════════════════${NC}" | lolcat
echo -e " ${NC}              >>>        ONEDATA       <<<"
echo -e " ${NC} ╭════════════════╮╭════════════════╮╭════════════════╮$NC"
echo -e " ${NC} │$YELL SSH    :$status_ssh       $YELL NGINX:$status_nginx         $YELL HAPROXY :$status_haproxy    ${NC}│"
echo -e " ${NC} │$YELL WS-ePro:$status_ws_epro       $YELL XRAY :$status_xray         $YELL DROPBEAR:$status_dropbear    ${NC}│"
echo -e " ${NC} ╰════════════════╯╰════════════════╯╰════════════════╯$NC"
echo -e " ${NC} ╭════════════════════════════════════════════════════╮"
echo -e " ${NC} │ $NC [${cyan}01$NC]${YELL} SSH MENU     $NC [${cyan}07$NC]${YELL} BCKP/RSTR            "
echo -e " ${NC} │ $NC [${cyan}02$NC]${YELL} VMESS MENU   $NC [${cyan}08$NC]${YELL} VPS INFO       "    
echo -e " ${NC} │ $NC [${cyan}03$NC]${YELL} VLESS MENU   $NC [${cyan}09$NC]${YELL} RESTART ALL       "   
echo -e " ${NC} │ $NC [${cyan}04$NC]${YELL} TROJAN MENU  $NC [${cyan}10$NC]${YELL} BOT MENU          " 
echo -e " ${NC} │ $NC [${cyan}05$NC]${YELL} SS - LIBEV   $NC [${cyan}11$NC]${YELL} UPDATE SCRIPT    "
echo -e " ${NC} │ $NC [${cyan}06$NC]${YELL} TRIAL ACC    $NC [${cyan}12$NC]${YELL} RUNNING⚙️                "
echo -e " ${NC} ╰════════════════════════════════════════════════════╯"
#echo -e " ${NC} ╭════════════════════════════════════════════════════╮"
#echo -e " ${NC} │$BLUE➪ Script Version $YELL=$NC V1."
#echo -e " ${NC} │$BLUE➪ Script Status  $YELL=$NC active"
#echo -e " ${NC} │$BLUE➪ Username       $YELL=$NC Onedata"
#echo -e " ${NC} │$BLUE➪ Expiry Script  $YELL=$NC 𝗟𝗶𝗳𝗲𝘁𝗶𝗺𝗲"
#echo -e " ${NC} ╰════════════════════════════════════════════════════╯"
echo -e " "
read -p "   Options [ 1 / 12 ] : " opt
echo -e ""
case $opt in
1 | 01)
clear
m-sshws
;;
2 | 02)
clear
m-vmess
;;
3 | 03)
clear
m-vless
;;
4 | 04)
clear
m-trojan
;;
5 | 05)
clear
m-ssws
;;
6 | 06)
clear
m-trial
;;
7 | 07)
clear
menu-backup
;;
8 | 08)
clear
gotop
;;
9 | 09)
clear
restart
;;
10)
clear
m-bot
;;
11)
clear
wget -q https://raw.githubusercontent.com/asheeka/SSHVPS/main/update.sh
chmod +x update.sh
./update.sh
;;
12)
clear
m-system
;;
0 | 00)
exit
;;
x)
menu
;;
*) clear ;
menu
;;
esac